version: '3.8'

services:
  telegram-bot:
    build: .
    container_name: telegram-bot
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=postgres
    volumes:
      - ./main.py:/app/main.py:ro
      - ./codes_db.txt:/app/codes_db.txt:ro
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - bot-network
      - external-network
    user: 1000:1000
    read_only: true
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    mem_limit: 512m
    cpu_shares: 512
    dns:
      - 8.8.8.8
      - 1.1.1.1

  postgres:
    image: postgres:15
    container_name: telegram_bot_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-telegram_bot}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - bot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    mem_limit: 1g
    cpu_shares: 1024

  admin_web:
    build: .
    container_name: telegram_bot_web
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=postgres
    volumes:
      - ./admin_web.py:/app/admin_web.py:ro
      - ./templates:/app/templates:ro
    depends_on:
      - postgres
    networks:
      - bot-network
    command: >
      sh -c "uvicorn admin_web:app --host 0.0.0.0 --port 5000 --reload"
    user: 1000:1000
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    mem_limit: 512m
    cpu_shares: 512

  nginx:
    image: nginxinc/nginx-unprivileged:1.25-alpine
    container_name: nginx
    expose:
      - "8080"
    ports:
      - "8000:8080"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_tmp:/tmp
    depends_on:
      - admin_web
    networks:
      - bot-network
      - external-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    mem_limit: 256m
    cpu_shares: 512

networks:
  bot-network:
    driver: bridge
    internal: true
  external-network:
    driver: bridge

volumes:
  postgres_data:
  nginx_tmp: 